Problem Link:-https://leetcode.com/problems/top-k-frequent-elements/submissions/



class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>count;
        for(auto x:nums){
            count[x]++;
        }
    
        priority_queue<pair<int,int> >pq;
        vector<int>res;
        for(auto x:count){
            pq.push(make_pair(x.second , x.first));
            if(pq.size()>count.size()-k){
                res.push_back(pq.top().second);
                pq.pop();
            }
        }
    return res;
    }
};
